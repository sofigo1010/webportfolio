---
import Header from "../components/Header.astro";
import '@fontsource-variable/tourney';

interface Props {
  title: string;
}

const { title } = Astro.props;
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Sofia Garcia's Web Portfolio" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="">
    <div id="surface"></div>
    <div id="caustics"></div>
    <div id="bg"></div>
    <div id="sun">
      <div id="sun_layer1"></div>
      <div id="sun_layer2"></div>
      <div id="sun_layer3"></div>
    </div>
  </body>
  
  <slot />
</html>

<style is:global>
  html {
    font-family: 'Tourney Variable', system-ui;
  }

 

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  *::before,
  *::after {
    box-sizing: border-box;
  }

  html,
  body {
    overscroll-behavior-x: none;
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
    position: relative;
    min-height: 100vh;
    width: 100vw;
    text-align: center;
    overflow-x: hidden;
    background: linear-gradient(
      to bottom,
      oklch(28.94% 0.081 230),
      oklch(13.65% 0.091 264.07)
    );
    color: white;
    font-size: clamp(12px, 5.5vw, 28px);
  }

  main {
    position: relative;
  }

  section {
    position: relative;
    width: 100vw;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: inherit;
    opacity: 0.9;
  }

  h1,
  h2,
  p,
  figcaption {
    overflow-wrap: break-word;
    max-width: 80vw;
    mix-blend-mode: overlay;
    transform: translate3d(0, 0, 0);
  }

  h2 {
    font-size: 1.3em;
  }

  figure {
    margin: 3rem 0;
    font-size: 0.7em;
    color: currentColor;
  }

  figure img {
    display: block;
    width: clamp(100px, 50vw, 300px);
    border-radius: 10px;
    filter: drop-shadow(3px 4px 2px rgba(0, 0, 0, 0.2));
    background-color: lightgray;
  }

  figure a {
    text-decoration: none;
    color: currentColor;
  }

  #bg {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-image: linear-gradient(
      to bottom,
      white,
      gray 25%,
      gray 60%,
      khaki
    );
    opacity: 0.5;
    mix-blend-mode: overlay;
  }

  #surface {
    mix-blend-mode: overlay;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
  }

  #surface::before,
  #surface::after {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-image: url(https://raw.githubusercontent.com/happy358/misc/main/image/cloud_X.png);
    background-repeat: repeat-x;

    --duration: 6s;
    --lowHeight: 20vh;
    --highHeight: 40vh;
    --layerNum: 2;
    --index: 0;
    --opacity: 0.4;

    animation: surface var(--duration) linear infinite;
    animation-delay: calc(
      (var(--duration) / var(--layerNum)) * var(--index) * -1
    );
    opacity: 0;
  }

  #surface::before {
    --index: 0;
    transform: scale3d(1, -1, 1);
  }

  #surface::after {
    --index: 1;
    transform: scale3d(-1, -1, 1);
  }

  #caustics {
    position: fixed;
    bottom: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    transform-origin: bottom center;
    transform: scale3d(2, 1, 1);
  }

  #caustics::before,
  #caustics::after {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-image: url(https://raw.githubusercontent.com/happy358/misc/main/image/caustics.png);
    background-repeat: repeat;

    --duration: 10s;
    --height: 30vh;
    --gapY: 0px;

    background-size: calc(100vw / (var(--ratioW))) 40vh;
    animation: caustics calc(var(--duration) * (var(--ratioW))) linear infinite;
    opacity: 0.3;
    mask-image: linear-gradient(
      to top,
      white,
      transparent var(--height),
      transparent
    );
  }

  #caustics::after {
    --duration: 11s;
    --gapY: 10vh;
    animation-delay: -2s;
    transform: scale3d(-1, 1, 1);
  }

  #sun {
    mix-blend-mode: overlay;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
  }

  #sun div {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-origin: 50vw 0;
    animation: sun 7s ease infinite alternate;

    mask-image: linear-gradient(
      to bottom,
      transparent 15%,
      white 50%,
      white 55%,
      transparent 80%
    );
  }

  #sun #sun_layer1 {
    background: linear-gradient(
      to right,
      transparent 39%,
      white 40%,
      transparent 41%,
      transparent 48.5%,
      white 50%,
      transparent 51.5%,
      transparent 53%,
      white 54%,
      transparent 55%,
      transparent 70%,
      white 71%,
      transparent 72%
    );
  }

  #sun #sun_layer2 {
    animation-delay: -2s;
    animation-duration: 7.8s;
    animation-direction: alternate-reverse;
    background: linear-gradient(
      to right,
      transparent 32%,
      white 33%,
      transparent 34%,
      transparent 38%,
      white 39%,
      transparent 40%,
      transparent 53%,
      white 54%,
      transparent 55%,
      transparent 63.5%,
      white 65%,
      transparent 66.5%
    );
  }

  #sun #sun_layer3 {
    animation-delay: -5s;
    animation-duration: 8.5s;
    background: linear-gradient(
      to right,
      transparent 38.5%,
      white 40%,
      transparent 41.5%,
      transparent 47%,
      white 48%,
      transparent 49%,
      transparent 52%,
      white 53%,
      transparent 54%,
      transparent 60%,
      white 61%,
      transparent 62%
    );
  }

  .arrows {
    width: auto;
    height: auto;
    position: absolute;
    bottom: 0.5rem;
    text-align: center;
    mix-blend-mode: overlay;
  }

  .arrows div {
    --arrowSize: 1.3rem;
    --arrowColor: currentColor;

    width: var(--arrowSize);
    height: var(--arrowSize);
    margin: calc(var(--arrowSize) * -1.5) 0;
    background: transparent;
    border: calc(var(--arrowSize) * 0.11) solid;
    border-color: transparent transparent var(--arrowColor) var(--arrowColor);
    transform: rotate(-45deg);
    animation: arrow 2s infinite linear;
  }

  @keyframes arrow {
    0% {
      opacity: 0;
    }
    40% {
      opacity: 1;
    }
    80% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  .arrows div:nth-of-type(3) {
    animation-delay: -0.8s;
  }

  .arrows div:nth-of-type(2) {
    animation-delay: -0.4s;
  }

  .arrows div:nth-of-type(1) {
    animation-delay: 0s;
  }

  @keyframes surface {
    0% {
      opacity: 0;
      background-position: center bottom;
      background-size: calc(3 * var(--highHeight)) var(--highHeight);
    }
    20% {
      opacity: var(--opacity);
    }
    100% {
      opacity: 0;
      background-position: center bottom calc(-1 * var(--lowHeight));
      background-size: calc(1 * var(--lowHeight)) var(--lowHeight);
    }
  }

  @keyframes caustics {
    0% {
      background-position: bottom var(--gapY) left;
    }
    100% {
      background-position: bottom var(--gapY) left -100vw;
    }
  }

  @keyframes sun {
    0% {
      opacity: 0.1;
      transform: skew(5deg) scale3d(3, 1.5, 1);
    }
    50% {
      opacity: 0.08;
      transform: skew(0deg) scale3d(1.5, 1, 1);
    }
    100% {
      opacity: 0.1;
      transform: skew(-5deg) scale3d(3, 1, 1);
    }
  }

  @media (orientation: portrait) {
    :root {
      --ratioW: 1;
    }
  }

  @media (min-aspect-ratio: 1/1) {
    :root {
      --ratioW: 2;
    }
  }

  @media (min-aspect-ratio: 2/1) {
    :root {
      --ratioW: 3;
    }
  }

  @media (min-aspect-ratio: 3/1) {
    :root {
      --ratioW: 4;
    }
  }
</style>
